version: '3.7'

volumes:
    postgres-data: {}
    esdata:
        driver: local

services:
    router:
        build: services/router
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        network_mode: host

    frontend:
        build: services/frontend
        depends_on:
            - postgres
        volumes:
            - "../../${PROJECT_DIRECTORY}:/home/app/application:cached"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-frontend.rule=Host(${PROJECT_DOMAINS})"
            - "traefik.http.routers.${PROJECT_NAME}-frontend.tls=true"
            - "traefik.http.routers.${PROJECT_NAME}-frontend-unsecure.rule=Host(${PROJECT_DOMAINS})"
            # Comment the next line to be able to access frontend via HTTP instead of HTTPS
            - "traefik.http.routers.${PROJECT_NAME}-frontend-unsecure.middlewares=redirect-to-https@file"

    postgres:
        build: services/postgres
        environment:
            - POSTGRES_USER=app
            - POSTGRES_PASSWORD=app
        volumes:
            - postgres-data:/var/lib/postgresql/data

    apm-server:
        image: docker.elastic.co/apm/apm-server:7.8.0
        depends_on:
            - elasticsearch
            - kibana
        cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
        cap_drop: ["ALL"]
        command: >
            apm-server -e
              -E apm-server.rum.enabled=true
              -E setup.kibana.host=kibana:5601
              -E setup.template.settings.index.number_of_replicas=0
              -E apm-server.kibana.enabled=true
              -E apm-server.kibana.host=kibana:5601
              -E output.elasticsearch.hosts=["elasticsearch:9200"]
        healthcheck:
            interval: 10s
            retries: 12
            test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
        environment:
            - bootstrap.memory_lock=true
            - cluster.name=docker-cluster
            - cluster.routing.allocation.disk.threshold_enabled=false
            - discovery.type=single-node
            - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g
        ulimits:
            memlock:
                hard: -1
                soft: -1
        volumes:
            - esdata:/usr/share/elasticsearch/data
        healthcheck:
            interval: 20s
            retries: 10
            test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'

    kibana:
        image: docker.elastic.co/kibana/kibana:7.8.0
        depends_on:
            - elasticsearch
        environment:
            ELASTICSEARCH_URL: http://elasticsearch:9200
            ELASTICSEARCH_HOSTS: http://elasticsearch:9200
        ports:
            - 5601:5601
        healthcheck:
            interval: 10s
            retries: 20
            test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status
